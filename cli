#!/bin/bash
clear
blue()   { echo -e "\033[34m\033[01m $1 \033[0m"; }
yellow() { echo -e "\033[33m\033[01m $1 \033[0m"; }
green()  { echo -e "\033[32m\033[01m $1 \033[0m"; }
red()    { echo -e "\033[31m\033[01m $1 \033[0m"; }

ms="https://raw.githubusercontent.com/a1041937392/trojan/master"
sd="https://github.com/pymumu/smartdns/releases/download/Release28/smartdns.1.2019.12.15-1028.x86_64-debian-all.deb"


install_pre(){
systemctl stop iptables-proxy > /dev/null 2>&1

modprobe xt_TPROXY
echo "xt_TPROXY" > '/etc/modules-load.d/TPROXY.conf'

echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf

cat << EOF > /etc/security/limits.conf
* soft nofile 1000000
* hard nofile 1000000
* soft nproc 1000000
* hard nproc 1000000
EOF
echo "ulimit -n 1000000" > ~/.bash_profile

cat << EOF > /etc/sysctl.conf
vm.overcommit_memory = 1
vm.swappiness = 10
fs.file-max = 1000000
fs.inotify.max_user_instances = 1000000
fs.inotify.max_user_watches = 1000000
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
net.ipv4.ip_forward = 1
net.ipv4.ip_local_port_range = 1025 65535
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_tw_reuse =1
net.ipv4.tcp_sack = 1
net.ipv4.tcp_fack = 1
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_syn_retries = 1
net.ipv4.tcp_synack_retries = 1
net.ipv4.tcp_max_syn_backlog = 32768
net.ipv4.tcp_max_tw_buckets = 6000
net.ipv4.tcp_max_orphans = 32768
net.ipv4.tcp_rmem = 4096 87380 8388608
net.ipv4.tcp_wmem = 4096 87380 8388608
net.core.rmem_max = 8388608
net.core.wmem_max = 8388608
net.core.somaxconn = 32768
net.core.netdev_max_backlog = 32768
EOF

sysctl -p

sed -i '/ip6-/d' /etc/hosts

systemctl mask --now systemd-resolved > /dev/null 2>&1
systemctl daemon-reload > /dev/null 2>&1
rm -rf /run/resolvconf/interface/systemd-resolved

}

install_sdns(){
wget -O ~/smartdns.deb $sd
dpkg -i smartdns.deb

cat << EOF > /etc/smartdns/smartdns.conf
bind [::]:5599
cache-size 512
prefetch-domain yes
rr-ttl 300
rr-ttl-min 60
rr-ttl-max 86400
log-level info
log-file /var/log/smartdns.log
log-size 128k
log-num 2
server 223.5.5.5
server 119.28.28.28
server-tcp 223.5.5.5
server-tcp 119.28.28.28
server-tcp 114.114.114.114
EOF

echo "" > /run/smartdns.pid
cat << EOF > /lib/systemd/system/smartdns.service
[Unit]
Description=Smart DNS server
After=network-online.target
Before=nss-lookup.target
Wants=network-online.target
[Service]
Type=forking
PIDFile=/run/smartdns.pid
EnvironmentFile=/etc/default/smartdns
ExecStart=/usr/sbin/smartdns $SMART_DNS_OPTS
KillMode=process
Restart=always
RestartSec=2s
LimitNPROC=1000000
LimitNOFILE=1000000
[Install]
WantedBy=multi-user.target
EOF
rm -rf ~/smartdns.deb

systemctl daemon-reload > /dev/null 2>&1
systemctl enable smartdns > /dev/null 2>&1
systemctl restart smartdns > /dev/null 2>&1
}

install_trojan(){
bash -c "$(wget -O- https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)"

cat << EOF > /usr/local/etc/trojan/config.json
{
    "run_type": "client",
    "local_addr": "127.0.0.1",
    "local_port": 1080,
    "remote_addr": "$svr_domain",
    "remote_port": 443,
    "password": [
        "$svr_pwd"
    ],
    "log_level": 1,
    "ssl": {
        "verify": true,
        "verify_hostname": true,
        "cert": "",
        "cipher": "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:AES128-SHA:AES256-SHA:DES-CBC3-SHA",
        "cipher_tls13": "TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384",
        "sni": "$svr_domain",
        "alpn": [
            "h2",
            "http/1.1"
        ],
        "reuse_session": true,
        "session_ticket": false,
        "curves": ""
    },
    "tcp": {
        "no_delay": true,
        "keep_alive": true,
        "reuse_port": false,
        "fast_open": false,
        "fast_open_qlen": 20
    }
}
EOF

    systemctl enable trojan > /dev/null 2>&1
    systemctl start trojan > /dev/null 2>&1
}


install_v2ray(){
cd ~
mkdir -p /usr/bin/v2ray
mkdir -p /etc/v2ray

wget --no-check-certificate -O ~/vtrui.zip $ms/vtamd64.zip

unzip vtrui.zip
mv -f ~/vtrui/vtrui /usr/bin/v2ray/v2ray
mv -f ~/vtrui/v2ctl /usr/bin/v2ray/v2ctl
mv -f ~/vtrui/geoip.dat /usr/bin/v2ray/geoip.dat
mv -f ~/vtrui/geosite.dat /usr/bin/v2ray/geosite.dat
rm -rf ~/vtrui*
chmod +x /usr/bin/v2ray/v2ray
chmod +x /usr/bin/v2ray/v2ctl

cat << EOF > /etc/v2ray/config.json
{
  "inbounds": [
    {
      "tag":"transparent",
      "port": 12345,
      "protocol": "dokodemo-door",
      "settings":{"network":"tcp,udp","followRedirect": true},
      "sniffing":{"enabled":true,"destOverride":["http","tls"]},
      "streamSettings":{"sockopt":{"tproxy":"tproxy"}}
    }
  ],
  "outbounds": [
    {
      "tag": "proxy",
      "protocol": "socks",
      "settings": {"servers": [{"address": "127.0.0.1","port": 1080}]},
      "streamSettings": {"sockopt": {"mark": 255}}
    },
    {
      "tag": "direct",
      "protocol": "freedom",
      "settings": {},
      "streamSettings": {"sockopt": {"mark": 255}}
    },
    {
      "tag": "dns-out",
      "protocol": "dns",
      "streamSettings": {"sockopt": {"mark": 255}
      }  
    }
	],
  "dns": {
    "servers": [
      "8.8.8.8",
      "1.1.1.1",
      "114.114.114.114",
      {
        "address": "127.0.0.1",
        "port": 5599,
        "domains": ["geosite:cn"]
      }
    ]
  },
  "routing": {
    "domainStrategy": "UseIP",
    "rules": [
      {"type":"field","inboundTag":"transparent","outboundTag":"dns-out","network":"udp"},   
      {"type":"field","outboundTag":"direct","ip":["127.0.0.1","114.114.114.114"]},
      {"type":"field","ip":["8.8.8.8","1.1.1.1"],"outboundTag": "proxy"},
      { // 直连中国大陆主流网站 ip 和 保留 ip
        "type": "field", 
        "ip": [
          "geoip:private",
          "geoip:cn"
        ],
        "outboundTag": "direct"
      },
      { // 直连中国大陆主流网站域名
        "type": "field", 
        "domain": [
          "geosite:cn"
        ],
        "outboundTag": "direct"
      }
    ]
  }
}
EOF


echo "" > /run/v2ray.pid
cat << EOF > /lib/systemd/system/v2ray.service
[Unit]
Description=v2ray Service
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
PIDFile=/run/v2ray.pid
AmbientCapabilities=CAP_NET_BIND_SERVICE
ExecStart=/usr/bin/v2ray/v2ray -config /etc/v2ray/config.json
Restart=always
RestartSec=5
LimitNPROC=1000000
LimitNOFILE=1000000

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload > /dev/null 2>&1
systemctl enable v2ray > /dev/null 2>&1
systemctl restart v2ray > /dev/null 2>&1

}


install_Iptables_Proxy(){

jy_ip=${loc_ip%.*}".0"

cat << EOF > /usr/local/bin/iptables_proxy
#!/bin/bash
# 设置策略路由
ip rule add fwmark 0x9 table 100 pref 100
ip route add local 0.0.0.0/0 dev lo table 100

# 代理局域网设备
iptables -t mangle -N V2RAY

iptables -t mangle -A V2RAY -p tcp --dport 5599 -j ACCEPT
iptables -t mangle -A V2RAY -p udp --dport 5599 -j ACCEPT

iptables -t mangle -A V2RAY -d 127.0.0.1/32 -j RETURN
iptables -t mangle -A V2RAY -d 224.0.0.0/4 -j RETURN 
iptables -t mangle -A V2RAY -d 255.255.255.255/32 -j RETURN 
iptables -t mangle -A V2RAY -d $jy_ip/16 -p tcp -j RETURN
iptables -t mangle -A V2RAY -d $jy_ip/16 -p udp ! --dport 53 -j RETURN
iptables -t mangle -A V2RAY -p udp -j TPROXY --on-port 12345 --tproxy-mark 0x9
iptables -t mangle -A V2RAY -p tcp -j TPROXY --on-port 12345 --tproxy-mark 0x9
iptables -t mangle -A PREROUTING -j V2RAY # 应用规则
EOF
chmod +x /usr/local/bin/iptables_proxy

cat << EOF > /lib/systemd/system/iptables-proxy.service
[Unit]
Description=iptables-proxy
After=network.target
Wants=network.target
[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/local/bin/iptables_proxy
[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload > /dev/null 2>&1
systemctl enable iptables-proxy > /dev/null 2>&1
systemctl restart iptables-proxy > /dev/null 2>&1

}

set_ip_dns(){

eth_n=$(ip --oneline link show up | grep -v "lo" | awk '{print$2;exit}' | cut -d':' -f1 | cut -d'@' -f1)

cat << EOF > /etc/network/interfaces
source /etc/network/interfaces.d/*

auto lo

auto  $eth_n
iface $eth_n inet static
  address $loc_ip
  netmask 255.255.255.0
  gateway $gate_ip
EOF

cat << EOF > /etc/resolv.conf
nameserver 127.0.0.1
nameserver 8.8.8.8
nameserver 114.114.114.114
EOF

}


install_tropxy(){

  green "========================="
  green " 输入本机IP"
  green "========================="
  read loc_ip

  green "========================="
  green " 输入网关IP（ros的ip或者爱快ip）"
  green "========================="
  read gate_ip

  green "========================="
  green " trojan服务器域名"
  green "========================="
  read svr_domain

  green "========================="
  green " trojan服务器密码"
  green "========================="
  read svr_pwd

cd ~

green "========================="
green " 开始安装依赖文件"
green "========================="
install_pre

cat > /etc/apt/sources.list << EOF
deb http://mirrors.aliyun.com/debian $(cat /etc/os-release | grep VERSION= | cut -d '(' -f2 | cut -d ')' -f1) main
deb http://mirrors.aliyun.com/debian-security $(cat /etc/os-release | grep VERSION= | cut -d '(' -f2 | cut -d ')' -f1)/updates main
deb http://mirrors.aliyun.com/debian $(cat /etc/os-release | grep VERSION= | cut -d '(' -f2 | cut -d ')' -f1)-updates main
EOF

rm -rf /etc/apt/sources.list.d/unstable.list
rm -rf /etc/apt/preferences.d/limit-unstable

apt update && apt upgrade -y
apt install --no-install-recommends --no-install-suggests -y sudo locales net-tools dnsutils ipset wget curl unzip zip
source /etc/profile

green "========================="
green " 开始安装smartdns"
green "========================="
install_sdns

green "========================="
green " 开始安装trojan"
green "========================="
install_trojan

green "========================="
green " 开始安装v2ray"
green "========================="
install_v2ray

green "========================="
green " 开始设置防火墙"
green "========================="
install_Iptables_Proxy

green "========================="
green " 开始设置本机固定IP"
green "========================="
set_ip_dns

  green " =========================安装完成========================================"
	green " 简介：一键安装TroProxy客户端"
	green " 系统：>=debian9"
	green " Youtube：米月"
	green " 电报群：https://t.me/mi_yue"
	green " Youtube频道地址：https://www.youtube.com/channel/UCr4HCEgaZ0cN5_7tLHS_xAg"
  green " DNS上游修改地址：/etc/smartdns/smartdns.conf"
	green " ==========================安装完成======================================="
}


start_m(){


  green " ========================================================================="
	green " 简介：一键安装TroProxy客户端"
	green " 系统：>=debian9"
	green " Youtube：米月"
	green " 电报群：https://t.me/mi_yue"
	green " Youtube频道地址：https://www.youtube.com/channel/UCr4HCEgaZ0cN5_7tLHS_xAg"
	green " ========================================================================="
    echo
    green  "1. 一键安装TroProxy"
    red    "CTRL+C EXIT"
    echo
    read -p "Select:" num
    case "$num" in
    1)
    install_tropxy
    ;;
    *)
    clear
    red "请输入正确的数字"
    ;;
    esac
}

start_m